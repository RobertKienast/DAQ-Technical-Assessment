# CMAKE generated file: DO NOT EDIT!
# Generated by "Unix Makefiles" Generator, CMake Version 3.28

# Default target executed when no arguments are given to make.
default_target: all
.PHONY : default_target

# Allow only one "make -f Makefile2" at a time, but pass parallelism.
.NOTPARALLEL:

#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canonical targets will work.
.SUFFIXES:

# Disable VCS-based implicit rules.
% : %,v

# Disable VCS-based implicit rules.
% : RCS/%

# Disable VCS-based implicit rules.
% : RCS/%,v

# Disable VCS-based implicit rules.
% : SCCS/s.%

# Disable VCS-based implicit rules.
% : s.%

.SUFFIXES: .hpux_make_needs_suffix_list

# Command-line flag to silence nested $(MAKE).
$(VERBOSE)MAKESILENT = -s

#Suppress display of executed commands.
$(VERBOSE).SILENT:

# A target that is always out of date.
cmake_force:
.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

# The shell in which to execute make rules.
SHELL = /bin/sh

# The CMake executable.
CMAKE_COMMAND = /usr/bin/cmake

# The command to remove a file.
RM = /usr/bin/cmake -E rm -f

# Escaping for special characters.
EQUALS = =

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = /home/rob/red/DAQ-Technical-Assessment/firmware

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = /home/rob/red/DAQ-Technical-Assessment/firmware/build

#=============================================================================
# Targets provided globally by CMake.

# Special rule for the target package
package: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Run CPack packaging tool..."
	cd /home/rob/red/DAQ-Technical-Assessment/firmware/build && /usr/bin/cpack --config ./CPackConfig.cmake
.PHONY : package

# Special rule for the target package
package/fast: package
.PHONY : package/fast

# Special rule for the target package_source
package_source:
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Run CPack packaging tool for source..."
	cd /home/rob/red/DAQ-Technical-Assessment/firmware/build && /usr/bin/cpack --config ./CPackSourceConfig.cmake /home/rob/red/DAQ-Technical-Assessment/firmware/build/CPackSourceConfig.cmake
.PHONY : package_source

# Special rule for the target package_source
package_source/fast: package_source
.PHONY : package_source/fast

# Special rule for the target edit_cache
edit_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "No interactive CMake dialog available..."
	/usr/bin/cmake -E echo No\ interactive\ CMake\ dialog\ available.
.PHONY : edit_cache

# Special rule for the target edit_cache
edit_cache/fast: edit_cache
.PHONY : edit_cache/fast

# Special rule for the target rebuild_cache
rebuild_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Running CMake to regenerate build system..."
	/usr/bin/cmake --regenerate-during-build -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : rebuild_cache

# Special rule for the target rebuild_cache
rebuild_cache/fast: rebuild_cache
.PHONY : rebuild_cache/fast

# Special rule for the target list_install_components
list_install_components:
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Available install components are: \"Unspecified\""
.PHONY : list_install_components

# Special rule for the target list_install_components
list_install_components/fast: list_install_components
.PHONY : list_install_components/fast

# Special rule for the target install
install: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Install the project..."
	/usr/bin/cmake -P cmake_install.cmake
.PHONY : install

# Special rule for the target install
install/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Install the project..."
	/usr/bin/cmake -P cmake_install.cmake
.PHONY : install/fast

# Special rule for the target install/local
install/local: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Installing only the local directory..."
	/usr/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
.PHONY : install/local

# Special rule for the target install/local
install/local/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Installing only the local directory..."
	/usr/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
.PHONY : install/local/fast

# Special rule for the target install/strip
install/strip: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Installing the project stripped..."
	/usr/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
.PHONY : install/strip

# Special rule for the target install/strip
install/strip/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Installing the project stripped..."
	/usr/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
.PHONY : install/strip/fast

# The main all target
all: cmake_check_build_system
	cd /home/rob/red/DAQ-Technical-Assessment/firmware/build && $(CMAKE_COMMAND) -E cmake_progress_start /home/rob/red/DAQ-Technical-Assessment/firmware/build/CMakeFiles /home/rob/red/DAQ-Technical-Assessment/firmware/build/modules/dbcppp/third-party/libxmlmm//CMakeFiles/progress.marks
	cd /home/rob/red/DAQ-Technical-Assessment/firmware/build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 modules/dbcppp/third-party/libxmlmm/all
	$(CMAKE_COMMAND) -E cmake_progress_start /home/rob/red/DAQ-Technical-Assessment/firmware/build/CMakeFiles 0
.PHONY : all

# The main clean target
clean:
	cd /home/rob/red/DAQ-Technical-Assessment/firmware/build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 modules/dbcppp/third-party/libxmlmm/clean
.PHONY : clean

# The main clean target
clean/fast: clean
.PHONY : clean/fast

# Prepare targets for installation.
preinstall: all
	cd /home/rob/red/DAQ-Technical-Assessment/firmware/build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 modules/dbcppp/third-party/libxmlmm/preinstall
.PHONY : preinstall

# Prepare targets for installation.
preinstall/fast:
	cd /home/rob/red/DAQ-Technical-Assessment/firmware/build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 modules/dbcppp/third-party/libxmlmm/preinstall
.PHONY : preinstall/fast

# clear depends
depend:
	cd /home/rob/red/DAQ-Technical-Assessment/firmware/build && $(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
.PHONY : depend

# Convenience name for target.
modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/rule:
	cd /home/rob/red/DAQ-Technical-Assessment/firmware/build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/rule
.PHONY : modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/rule

# Convenience name for target.
libxmlmm: modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/rule
.PHONY : libxmlmm

# fast build rule for target.
libxmlmm/fast:
	cd /home/rob/red/DAQ-Technical-Assessment/firmware/build && $(MAKE) $(MAKESILENT) -f modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/build.make modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/build
.PHONY : libxmlmm/fast

libxmlmm/Attribute.o: libxmlmm/Attribute.cpp.o
.PHONY : libxmlmm/Attribute.o

# target to build an object file
libxmlmm/Attribute.cpp.o:
	cd /home/rob/red/DAQ-Technical-Assessment/firmware/build && $(MAKE) $(MAKESILENT) -f modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/build.make modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/libxmlmm/Attribute.cpp.o
.PHONY : libxmlmm/Attribute.cpp.o

libxmlmm/Attribute.i: libxmlmm/Attribute.cpp.i
.PHONY : libxmlmm/Attribute.i

# target to preprocess a source file
libxmlmm/Attribute.cpp.i:
	cd /home/rob/red/DAQ-Technical-Assessment/firmware/build && $(MAKE) $(MAKESILENT) -f modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/build.make modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/libxmlmm/Attribute.cpp.i
.PHONY : libxmlmm/Attribute.cpp.i

libxmlmm/Attribute.s: libxmlmm/Attribute.cpp.s
.PHONY : libxmlmm/Attribute.s

# target to generate assembly for a file
libxmlmm/Attribute.cpp.s:
	cd /home/rob/red/DAQ-Technical-Assessment/firmware/build && $(MAKE) $(MAKESILENT) -f modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/build.make modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/libxmlmm/Attribute.cpp.s
.PHONY : libxmlmm/Attribute.cpp.s

libxmlmm/CData.o: libxmlmm/CData.cpp.o
.PHONY : libxmlmm/CData.o

# target to build an object file
libxmlmm/CData.cpp.o:
	cd /home/rob/red/DAQ-Technical-Assessment/firmware/build && $(MAKE) $(MAKESILENT) -f modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/build.make modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/libxmlmm/CData.cpp.o
.PHONY : libxmlmm/CData.cpp.o

libxmlmm/CData.i: libxmlmm/CData.cpp.i
.PHONY : libxmlmm/CData.i

# target to preprocess a source file
libxmlmm/CData.cpp.i:
	cd /home/rob/red/DAQ-Technical-Assessment/firmware/build && $(MAKE) $(MAKESILENT) -f modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/build.make modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/libxmlmm/CData.cpp.i
.PHONY : libxmlmm/CData.cpp.i

libxmlmm/CData.s: libxmlmm/CData.cpp.s
.PHONY : libxmlmm/CData.s

# target to generate assembly for a file
libxmlmm/CData.cpp.s:
	cd /home/rob/red/DAQ-Technical-Assessment/firmware/build && $(MAKE) $(MAKESILENT) -f modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/build.make modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/libxmlmm/CData.cpp.s
.PHONY : libxmlmm/CData.cpp.s

libxmlmm/Comment.o: libxmlmm/Comment.cpp.o
.PHONY : libxmlmm/Comment.o

# target to build an object file
libxmlmm/Comment.cpp.o:
	cd /home/rob/red/DAQ-Technical-Assessment/firmware/build && $(MAKE) $(MAKESILENT) -f modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/build.make modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/libxmlmm/Comment.cpp.o
.PHONY : libxmlmm/Comment.cpp.o

libxmlmm/Comment.i: libxmlmm/Comment.cpp.i
.PHONY : libxmlmm/Comment.i

# target to preprocess a source file
libxmlmm/Comment.cpp.i:
	cd /home/rob/red/DAQ-Technical-Assessment/firmware/build && $(MAKE) $(MAKESILENT) -f modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/build.make modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/libxmlmm/Comment.cpp.i
.PHONY : libxmlmm/Comment.cpp.i

libxmlmm/Comment.s: libxmlmm/Comment.cpp.s
.PHONY : libxmlmm/Comment.s

# target to generate assembly for a file
libxmlmm/Comment.cpp.s:
	cd /home/rob/red/DAQ-Technical-Assessment/firmware/build && $(MAKE) $(MAKESILENT) -f modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/build.make modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/libxmlmm/Comment.cpp.s
.PHONY : libxmlmm/Comment.cpp.s

libxmlmm/Content.o: libxmlmm/Content.cpp.o
.PHONY : libxmlmm/Content.o

# target to build an object file
libxmlmm/Content.cpp.o:
	cd /home/rob/red/DAQ-Technical-Assessment/firmware/build && $(MAKE) $(MAKESILENT) -f modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/build.make modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/libxmlmm/Content.cpp.o
.PHONY : libxmlmm/Content.cpp.o

libxmlmm/Content.i: libxmlmm/Content.cpp.i
.PHONY : libxmlmm/Content.i

# target to preprocess a source file
libxmlmm/Content.cpp.i:
	cd /home/rob/red/DAQ-Technical-Assessment/firmware/build && $(MAKE) $(MAKESILENT) -f modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/build.make modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/libxmlmm/Content.cpp.i
.PHONY : libxmlmm/Content.cpp.i

libxmlmm/Content.s: libxmlmm/Content.cpp.s
.PHONY : libxmlmm/Content.s

# target to generate assembly for a file
libxmlmm/Content.cpp.s:
	cd /home/rob/red/DAQ-Technical-Assessment/firmware/build && $(MAKE) $(MAKESILENT) -f modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/build.make modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/libxmlmm/Content.cpp.s
.PHONY : libxmlmm/Content.cpp.s

libxmlmm/Document.o: libxmlmm/Document.cpp.o
.PHONY : libxmlmm/Document.o

# target to build an object file
libxmlmm/Document.cpp.o:
	cd /home/rob/red/DAQ-Technical-Assessment/firmware/build && $(MAKE) $(MAKESILENT) -f modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/build.make modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/libxmlmm/Document.cpp.o
.PHONY : libxmlmm/Document.cpp.o

libxmlmm/Document.i: libxmlmm/Document.cpp.i
.PHONY : libxmlmm/Document.i

# target to preprocess a source file
libxmlmm/Document.cpp.i:
	cd /home/rob/red/DAQ-Technical-Assessment/firmware/build && $(MAKE) $(MAKESILENT) -f modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/build.make modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/libxmlmm/Document.cpp.i
.PHONY : libxmlmm/Document.cpp.i

libxmlmm/Document.s: libxmlmm/Document.cpp.s
.PHONY : libxmlmm/Document.s

# target to generate assembly for a file
libxmlmm/Document.cpp.s:
	cd /home/rob/red/DAQ-Technical-Assessment/firmware/build && $(MAKE) $(MAKESILENT) -f modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/build.make modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/libxmlmm/Document.cpp.s
.PHONY : libxmlmm/Document.cpp.s

libxmlmm/Element.o: libxmlmm/Element.cpp.o
.PHONY : libxmlmm/Element.o

# target to build an object file
libxmlmm/Element.cpp.o:
	cd /home/rob/red/DAQ-Technical-Assessment/firmware/build && $(MAKE) $(MAKESILENT) -f modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/build.make modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/libxmlmm/Element.cpp.o
.PHONY : libxmlmm/Element.cpp.o

libxmlmm/Element.i: libxmlmm/Element.cpp.i
.PHONY : libxmlmm/Element.i

# target to preprocess a source file
libxmlmm/Element.cpp.i:
	cd /home/rob/red/DAQ-Technical-Assessment/firmware/build && $(MAKE) $(MAKESILENT) -f modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/build.make modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/libxmlmm/Element.cpp.i
.PHONY : libxmlmm/Element.cpp.i

libxmlmm/Element.s: libxmlmm/Element.cpp.s
.PHONY : libxmlmm/Element.s

# target to generate assembly for a file
libxmlmm/Element.cpp.s:
	cd /home/rob/red/DAQ-Technical-Assessment/firmware/build && $(MAKE) $(MAKESILENT) -f modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/build.make modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/libxmlmm/Element.cpp.s
.PHONY : libxmlmm/Element.cpp.s

libxmlmm/LibXmlSentry.o: libxmlmm/LibXmlSentry.cpp.o
.PHONY : libxmlmm/LibXmlSentry.o

# target to build an object file
libxmlmm/LibXmlSentry.cpp.o:
	cd /home/rob/red/DAQ-Technical-Assessment/firmware/build && $(MAKE) $(MAKESILENT) -f modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/build.make modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/libxmlmm/LibXmlSentry.cpp.o
.PHONY : libxmlmm/LibXmlSentry.cpp.o

libxmlmm/LibXmlSentry.i: libxmlmm/LibXmlSentry.cpp.i
.PHONY : libxmlmm/LibXmlSentry.i

# target to preprocess a source file
libxmlmm/LibXmlSentry.cpp.i:
	cd /home/rob/red/DAQ-Technical-Assessment/firmware/build && $(MAKE) $(MAKESILENT) -f modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/build.make modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/libxmlmm/LibXmlSentry.cpp.i
.PHONY : libxmlmm/LibXmlSentry.cpp.i

libxmlmm/LibXmlSentry.s: libxmlmm/LibXmlSentry.cpp.s
.PHONY : libxmlmm/LibXmlSentry.s

# target to generate assembly for a file
libxmlmm/LibXmlSentry.cpp.s:
	cd /home/rob/red/DAQ-Technical-Assessment/firmware/build && $(MAKE) $(MAKESILENT) -f modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/build.make modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/libxmlmm/LibXmlSentry.cpp.s
.PHONY : libxmlmm/LibXmlSentry.cpp.s

libxmlmm/Node.o: libxmlmm/Node.cpp.o
.PHONY : libxmlmm/Node.o

# target to build an object file
libxmlmm/Node.cpp.o:
	cd /home/rob/red/DAQ-Technical-Assessment/firmware/build && $(MAKE) $(MAKESILENT) -f modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/build.make modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/libxmlmm/Node.cpp.o
.PHONY : libxmlmm/Node.cpp.o

libxmlmm/Node.i: libxmlmm/Node.cpp.i
.PHONY : libxmlmm/Node.i

# target to preprocess a source file
libxmlmm/Node.cpp.i:
	cd /home/rob/red/DAQ-Technical-Assessment/firmware/build && $(MAKE) $(MAKESILENT) -f modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/build.make modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/libxmlmm/Node.cpp.i
.PHONY : libxmlmm/Node.cpp.i

libxmlmm/Node.s: libxmlmm/Node.cpp.s
.PHONY : libxmlmm/Node.s

# target to generate assembly for a file
libxmlmm/Node.cpp.s:
	cd /home/rob/red/DAQ-Technical-Assessment/firmware/build && $(MAKE) $(MAKESILENT) -f modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/build.make modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/libxmlmm/Node.cpp.s
.PHONY : libxmlmm/Node.cpp.s

libxmlmm/ProcessingInstruction.o: libxmlmm/ProcessingInstruction.cpp.o
.PHONY : libxmlmm/ProcessingInstruction.o

# target to build an object file
libxmlmm/ProcessingInstruction.cpp.o:
	cd /home/rob/red/DAQ-Technical-Assessment/firmware/build && $(MAKE) $(MAKESILENT) -f modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/build.make modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/libxmlmm/ProcessingInstruction.cpp.o
.PHONY : libxmlmm/ProcessingInstruction.cpp.o

libxmlmm/ProcessingInstruction.i: libxmlmm/ProcessingInstruction.cpp.i
.PHONY : libxmlmm/ProcessingInstruction.i

# target to preprocess a source file
libxmlmm/ProcessingInstruction.cpp.i:
	cd /home/rob/red/DAQ-Technical-Assessment/firmware/build && $(MAKE) $(MAKESILENT) -f modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/build.make modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/libxmlmm/ProcessingInstruction.cpp.i
.PHONY : libxmlmm/ProcessingInstruction.cpp.i

libxmlmm/ProcessingInstruction.s: libxmlmm/ProcessingInstruction.cpp.s
.PHONY : libxmlmm/ProcessingInstruction.s

# target to generate assembly for a file
libxmlmm/ProcessingInstruction.cpp.s:
	cd /home/rob/red/DAQ-Technical-Assessment/firmware/build && $(MAKE) $(MAKESILENT) -f modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/build.make modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/libxmlmm/ProcessingInstruction.cpp.s
.PHONY : libxmlmm/ProcessingInstruction.cpp.s

libxmlmm/Text.o: libxmlmm/Text.cpp.o
.PHONY : libxmlmm/Text.o

# target to build an object file
libxmlmm/Text.cpp.o:
	cd /home/rob/red/DAQ-Technical-Assessment/firmware/build && $(MAKE) $(MAKESILENT) -f modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/build.make modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/libxmlmm/Text.cpp.o
.PHONY : libxmlmm/Text.cpp.o

libxmlmm/Text.i: libxmlmm/Text.cpp.i
.PHONY : libxmlmm/Text.i

# target to preprocess a source file
libxmlmm/Text.cpp.i:
	cd /home/rob/red/DAQ-Technical-Assessment/firmware/build && $(MAKE) $(MAKESILENT) -f modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/build.make modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/libxmlmm/Text.cpp.i
.PHONY : libxmlmm/Text.cpp.i

libxmlmm/Text.s: libxmlmm/Text.cpp.s
.PHONY : libxmlmm/Text.s

# target to generate assembly for a file
libxmlmm/Text.cpp.s:
	cd /home/rob/red/DAQ-Technical-Assessment/firmware/build && $(MAKE) $(MAKESILENT) -f modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/build.make modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/libxmlmm/Text.cpp.s
.PHONY : libxmlmm/Text.cpp.s

libxmlmm/utils.o: libxmlmm/utils.cpp.o
.PHONY : libxmlmm/utils.o

# target to build an object file
libxmlmm/utils.cpp.o:
	cd /home/rob/red/DAQ-Technical-Assessment/firmware/build && $(MAKE) $(MAKESILENT) -f modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/build.make modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/libxmlmm/utils.cpp.o
.PHONY : libxmlmm/utils.cpp.o

libxmlmm/utils.i: libxmlmm/utils.cpp.i
.PHONY : libxmlmm/utils.i

# target to preprocess a source file
libxmlmm/utils.cpp.i:
	cd /home/rob/red/DAQ-Technical-Assessment/firmware/build && $(MAKE) $(MAKESILENT) -f modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/build.make modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/libxmlmm/utils.cpp.i
.PHONY : libxmlmm/utils.cpp.i

libxmlmm/utils.s: libxmlmm/utils.cpp.s
.PHONY : libxmlmm/utils.s

# target to generate assembly for a file
libxmlmm/utils.cpp.s:
	cd /home/rob/red/DAQ-Technical-Assessment/firmware/build && $(MAKE) $(MAKESILENT) -f modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/build.make modules/dbcppp/third-party/libxmlmm/CMakeFiles/libxmlmm.dir/libxmlmm/utils.cpp.s
.PHONY : libxmlmm/utils.cpp.s

# Help Target
help:
	@echo "The following are some of the valid targets for this Makefile:"
	@echo "... all (the default if no target is provided)"
	@echo "... clean"
	@echo "... depend"
	@echo "... edit_cache"
	@echo "... install"
	@echo "... install/local"
	@echo "... install/strip"
	@echo "... list_install_components"
	@echo "... package"
	@echo "... package_source"
	@echo "... rebuild_cache"
	@echo "... libxmlmm"
	@echo "... libxmlmm/Attribute.o"
	@echo "... libxmlmm/Attribute.i"
	@echo "... libxmlmm/Attribute.s"
	@echo "... libxmlmm/CData.o"
	@echo "... libxmlmm/CData.i"
	@echo "... libxmlmm/CData.s"
	@echo "... libxmlmm/Comment.o"
	@echo "... libxmlmm/Comment.i"
	@echo "... libxmlmm/Comment.s"
	@echo "... libxmlmm/Content.o"
	@echo "... libxmlmm/Content.i"
	@echo "... libxmlmm/Content.s"
	@echo "... libxmlmm/Document.o"
	@echo "... libxmlmm/Document.i"
	@echo "... libxmlmm/Document.s"
	@echo "... libxmlmm/Element.o"
	@echo "... libxmlmm/Element.i"
	@echo "... libxmlmm/Element.s"
	@echo "... libxmlmm/LibXmlSentry.o"
	@echo "... libxmlmm/LibXmlSentry.i"
	@echo "... libxmlmm/LibXmlSentry.s"
	@echo "... libxmlmm/Node.o"
	@echo "... libxmlmm/Node.i"
	@echo "... libxmlmm/Node.s"
	@echo "... libxmlmm/ProcessingInstruction.o"
	@echo "... libxmlmm/ProcessingInstruction.i"
	@echo "... libxmlmm/ProcessingInstruction.s"
	@echo "... libxmlmm/Text.o"
	@echo "... libxmlmm/Text.i"
	@echo "... libxmlmm/Text.s"
	@echo "... libxmlmm/utils.o"
	@echo "... libxmlmm/utils.i"
	@echo "... libxmlmm/utils.s"
.PHONY : help



#=============================================================================
# Special targets to cleanup operation of make.

# Special rule to run CMake to check the build system integrity.
# No rule that depends on this can have commands that come from listfiles
# because they might be regenerated.
cmake_check_build_system:
	cd /home/rob/red/DAQ-Technical-Assessment/firmware/build && $(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
.PHONY : cmake_check_build_system

